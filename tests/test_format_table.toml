[[test_tabulate]]
id = 'empty'
header = []
rows = []
footer = []
format = ''
align = ''
truncate = ''
max_width = -1
expected = ''

[[test_tabulate]]
id = '1x1'
header = []
rows = [['A']]
footer = []
format = ''
align = ''
truncate = ''
max_width = -1
expected = 'A'

[[test_tabulate]]
id = '2x1'
header = []
rows = [['A', 'B']]
footer = []
format = ''
align = ''
truncate = ''
max_width = -1
expected = 'A  B'

[[test_tabulate]]
id = '1x2'
header = []
rows = [['A'], ['B']]
footer = []
format = ''
align = ''
truncate = ''
max_width = -1
expected = '''
A
B
'''

[[test_tabulate]]
id = '2x2'
header = []
rows = [['AB', 'C'], ['D', 'EF']]
footer = []
format = ''
align = ''
truncate = ''
max_width = -1
expected = '''
AB  C
D   EF
'''

[[test_tabulate]]
id = 'header'
header = ['1', '2']
rows = [['AB', 'C'], ['D', 'EF']]
footer = []
format = ''
align = ''
truncate = ''
max_width = -1
expected = '''
1   2
──────
AB  C
D   EF
'''

[[test_tabulate]]
id = 'footer'
header = []
rows = [['AB', 'C'], ['D', 'EF']]
footer = ['X', 'Y']
format = ''
align = ''
truncate = ''
max_width = -1
expected = '''
AB  C
D   EF
──────
X   Y
'''

[[test_tabulate]]
id = 'header-footer'
header = ['1', '2']
rows = [['AB', 'C'], ['D', 'EF']]
footer = ['X', 'Y']
format = ''
align = ''
truncate = ''
max_width = -1
expected = '''
1   2
──────
AB  C
D   EF
──────
X   Y
'''

[[test_tabulate]]
id = 'align-1'
header = ['1', '2']
rows = [['AB', 'C'], ['D', 'EF']]
footer = ['X', 'Y']
format = ''
align = '<>'
truncate = ''
max_width = -1
expected = '''
1    2
──────
AB   C
D   EF
──────
X    Y
'''

[[test_tabulate]]
id = 'align-2'
header = ['1', '2']
rows = [['AB', 'C'], ['D', 'EF']]
footer = ['X', 'Y']
format = ''
align = '><'
truncate = ''
max_width = -1
expected = '''
 1  2
──────
AB  C
 D  EF
──────
 X  Y
'''

[[test_tabulate]]
id = 'auto-align-int-1'
header = []
rows = [['AB', '1'], ['D', '10']]
footer = []
format = ''
align = ''
truncate = ''
max_width = -1
expected = '''
AB   1
D   10
'''

[[test_tabulate]]
id = 'auto-align-int-2'
header = []
rows = [['1', 'C'], ['10', 'EF']]
footer = []
format = ''
align = ''
truncate = ''
max_width = -1
expected = '''
 1  C
10  EF
'''

[[test_tabulate]]
id = 'auto-align-unit-1'
header = []
rows = [['AB', '1 µL'], ['D', '10 µL']]
footer = []
format = ''
align = ''
truncate = ''
max_width = -1
expected = '''
AB   1 µL
D   10 µL
'''

[[test_tabulate]]
id = 'auto-align-unit-2'
header = []
rows = [['1 µL', 'C'], ['10 µL', 'EF']]
footer = []
format = ''
align = ''
truncate = ''
max_width = -1
expected = '''
 1 µL  C
10 µL  EF
'''

[[test_tabulate]]
id = 'split-header'
header = ["1\n2", "3"]
rows = [["AB", "C"], ["D", "EF"]]
footer = []
format = ''
align = ''
truncate = ''
max_width = -1
expected = '''
1
2   3
──────
AB  C
D   EF
'''

[[test_tabulate]]
id = 'split-row'
header = []
rows = [["A\nB", "C"], ["D", "EF"]]
footer = []
format = ''
align = ''
truncate = ''
max_width = -1
expected = '''
A  C
B
D  EF
'''

[[test_tabulate]]
# The header makes sure that the alignment takes the formatting into account.
id = 'format'
header = ['A', 'B']
rows = [[10, 10]]
footer = []
format = '''[lambda x: f'{x:.2f}', str]'''
align = ''
truncate = ''
max_width = -1
expected = '''
    A   B
─────────
10.00  10
'''

[[test_tabulate]]
id = 'truncate-1'
header = ['1', '2']
rows = [['A B', 'C D']]
footer = []
format = ''
align = ''
truncate = '-x'
max_width = 7
expected = '''
1    2
───────
A B  C…
'''

[[test_tabulate]]
id = 'truncate-2'
header = ['1', '2']
rows = [['A B', 'C D']]
footer = []
format = ''
align = ''
truncate = 'x-'
max_width = 7
expected = '''
1   2
───────
A…  C D
'''


[[test_concat_rows]]
header = []
rows = []
footer = []
format = 'None'
expected = []
i_header = 0
i_footer = 0

[[test_concat_rows]]
header = ['A', 'B']
rows = []
footer = []
format = 'None'
expected = [['A', 'B']]
i_header = 1
i_footer = 1

[[test_concat_rows]]
header = true
rows = [['A', 'B']]
footer = []
format = 'None'
expected = [['A', 'B']]
i_header = 1
i_footer = 1

[[test_concat_rows]]
header = []
rows = [['C', 'D']]
footer = []
format = 'None'
expected = [['C', 'D']]
i_header = 0
i_footer = 1

[[test_concat_rows]]
header = []
rows = [['C', 'D'], ['E', 'F']]
footer = []
format = 'None'
expected = [['C', 'D'], ['E', 'F']]
i_header = 0
i_footer = 2

[[test_concat_rows]]
header = []
rows = []
footer = ['G', 'H']
format = 'None'
expected = [['G', 'H']]
i_header = 0
i_footer = 0

[[test_concat_rows]]
header = []
rows = [['G', 'H']]
footer = true
format = 'None'
expected = [['G', 'H']]
i_header = 0
i_footer = 0

[[test_concat_rows]]
header = ['A', 'B']
rows = [['C', 'D'], ['E', 'F']]
footer = ['G', 'H']
format = 'None'
expected = [['A', 'B'], ['C', 'D'], ['E', 'F'], ['G', 'H']]
i_header = 1
i_footer = 3

[[test_concat_rows]]
header = []
rows = [[10, 10]]
footer = []
format = 'None'
expected = [['10', '10']]
i_header = 0
i_footer = 1

[[test_concat_rows]]
header = []
rows = [[10, 10]]
footer = []
format = '''[str, lambda x: f'{x:.2f}']'''
expected = [['10', '10.00']]
i_header = 0
i_footer = 1

[[test_concat_rows_err]]
header = []
rows = [[10, 10]]
footer = []
format = '''[str]'''
err = "given 1 formatter, expected 2"

[[test_concat_rows_err]]
header = []
rows = [[10]]
footer = []
format = '''[str, str]'''
err = "given 2 formatters, expected 1"


[[test_split_row]]
row = []
align = 'top'
expected = []

[[test_split_row]]
row = ["A"]
align = 'top'
expected = [['A']]

[[test_split_row]]
row = ["A", "B"]
align = 'top'
expected = [['A', 'B']]

[[test_split_row]]
row = ["A\nB", "C\nD"]
align = 'top'
expected = [['A', 'C'], ['B', 'D']]

[[test_split_row]]
row = ["A", "C\nD"]
align = 'top'
expected = [['A', 'C'], ['', 'D']]

[[test_split_row]]
row = ["A\nB", "C"]
align = 'top'
expected = [['A', 'C'], ['B', '']]

[[test_split_row]]
row = ["A", "C\nD"]
align = 'bottom'
expected = [['', 'C'], ['A', 'D']]

[[test_split_row]]
row = ["A\nB", "C"]
align = 'bottom'
expected = [['A', ''], ['B', 'C']]


[[test_auto_align]]
rows = []
expected = []

[[test_auto_align]]
rows = [['A']]
expected = ['<']

[[test_auto_align]]
rows = [['1e5']]
expected = ['>']

[[test_auto_align]]
rows = [['A'], ['1e5']]
expected = ['<']

[[test_auto_align]]
rows = [['A', '1e5']]
expected = ['<', '>']


[[test_measure_cols]]
table = []
truncate = ''
max_width = -1
pad = 2
expected = {cols=[], table=0}

[[test_measure_cols]]
table = [['A']]
truncate = '-'
max_width = -1
pad = 2
expected = {cols=[1], table=1}

[[test_measure_cols]]
table = [['A'], ['AB']]
truncate = '-'
max_width = -1
pad = 2
expected = {cols=[2], table=2}

[[test_measure_cols]]
table = [['AB'], ['A']]
truncate = '-'
max_width = -1
pad = 2
expected = {cols=[2], table=2}

[[test_measure_cols]]
table = [['A', 'AB']]
truncate = '--'
max_width = -1
pad = 2
expected = {cols=[1,2], table=5}

[[test_measure_cols]]
table = [['123456']]
truncate = '-'
max_width = 5
pad = 2
expected = {cols=[6], table=6}

[[test_measure_cols]]
table = [['123456']]
truncate = 'x'
max_width = 5
pad = 2
expected = {cols=[5], table=5}

[[test_measure_cols]]
table = [['12', '34']]
truncate = '--'
max_width = 5
pad = 2
expected = {cols=[2, 2], table=6}

[[test_measure_cols]]
table = [['12', '34']]
truncate = 'x-'
max_width = 5
pad = 2
expected = {cols=[1, 2], table=5}

[[test_measure_cols]]
table = [['12', '34']]
truncate = '-x'
max_width = 5
pad = 2
expected = {cols=[2, 1], table=5}

[[test_measure_cols]]
table = [['12', '34']]
truncate = 'xx'
max_width = 4
pad = 2
expected = {cols=[1, 1], table=4}

[[test_measure_cols]]
table = [['12', '345']]
truncate = 'xx'
max_width = 6
pad = 2
expected = {cols=[2, 2], table=6}

[[test_measure_cols]]
table = [['12', '3456789']]
truncate = 'xx'
max_width = 6
pad = 2
expected = {cols=[2, 2], table=6}

[[test_measure_cols_err]]
table = [['A']]
truncate = '--'
max_width = -1
pad = 2
err = "table has 1 column, but truncation specified for 2: '--'"

[[test_measure_cols_err]]
table = [['A', 'B']]
truncate = '-'
max_width = -1
pad = 2
err = "table has 2 columns, but truncation specified for 1: '-'"


[[test_count_cols]]
table = []
expected = 0

[[test_count_cols]]
table = [[1]]
expected = 1

[[test_count_cols]]
table = [[1], [1]]
expected = 1

[[test_count_cols]]
table = [[1, 2]]
expected = 2

[[test_count_cols]]
table = [[1, 2], [1, 2]]
expected = 2

[[test_count_cols_err]]
id = '2,1'
table = [[1, 2], [1]]
err = "different numbers of columns: 1,2"

[[test_count_cols_err]]
id = '1,2'
table = [[1], [1, 2]]
err = "different numbers of columns: 1,2"

