test_reagent_volume:
  -
    given: Quantity(1, 'µL')
    expected: 1 µL
  -
    given: 2, 'µL'
    expected: 2 µL
  -
    given: '3 µL'
    expected: 3 µL

test_reagent_is_empty:
  -
    volume_uL: 0
    expected: True
  -
    volume_uL: 0.004
    expected: True
  -
    volume_uL: 0.005
    expected: False
  -
    volume_uL: 0.04
    kwargs:
      precision: 1
    expected: True
  -
    volume_uL: 0.05
    kwargs:
      precision: 1
    expected: False
  -
    volume_uL: 1
    expected: False

test_reagent_stock_conc:
  -
    given: Quantity(1, 'ng/µL')
    expected: 1 ng/µL
  -
    given: 2, 'ng/µL'
    expected: 2 ng/µL
  -
    given: '3 ng/µL'
    expected: 3 ng/µL

test_reagent_conc:
  -
    volume: 1 µL
    stock_conc: 10 ng/µL
    rxn_volume: 5 µL
    expected: 2 ng/µL
  -
    volume:
    stock_conc: 10 ng/µL
    rxn_volume: 5 µL
    error:
      type: ValueError
      message: no volume specified for 'x'
  -
    volume: 1 µL
    stock_conc:
    rxn_volume: 5 µL
    error:
      type: ValueError
      message: no stock concentration specified for 'x'
  -
    volume: 1 µL
    stock_conc: 10 ng/µL
    rxn_volume:
    error:
      type: ValueError
      message: no reaction volume specified

test_reagent_hold_conc:
  -
    v1: 1 µL
    s1: 10 ng/µL
    v2: 1 µL
    s2: 10 ng/µL
  -
    v1: 1 µL
    s1: 10 ng/µL
    v2: 2 µL
    s2: 5 ng/µL

test_reagent_hold_volume:
  -
    rxn_volume: 10 µL
    v1: 1 µL
    s1: 10 ng/µL
    c1: 1 ng/µL
    s2: 10 ng/µL
    c2: 1 ng/µL
  -
    rxn_volume: 10 µL
    v1: 1 µL
    s1: 10 ng/µL
    c1: 1 ng/µL
    s2: 20 ng/µL
    c2: 2 ng/µL

test_reagent_hold_stock_conc:
  -
    rxn_volume: 10 µL
    s1: 10 ng/µL
    v1: 1 µL
    c1: 1 ng/µL
    v2: 1 µL
    c2: 1 ng/µL
  -
    rxn_volume: 10 µL
    s1: 10 ng/µL
    v1: 1 µL
    c1: 1 ng/µL
    v2: 2 µL
    c2: 2 ng/µL

test_reaction_setup:
  -
    id: append
    reaction:
      > rxn = Reaction()
      > rxn.append_reagent('x')
      > rxn.append_reagent('y')
    expected:
      reagents:
        -
          class: Reagent
          key: 'x'
        -
          class: Reagent
          key: 'y'
  -
    id: append-err-dup
    reaction:
      > rxn = Reaction()
      > rxn.append_reagent('x')
      > rxn.append_reagent('x')
    error:
      type: UsageError
      message: 'x' is already a reagent
  -
    id: prepend
    reaction:
      > rxn = Reaction()
      > rxn.prepend_reagent('x')
      > rxn.prepend_reagent('y')
    expected:
      reagents:
        -
          class: Reagent
          key: 'y'
        -
          class: Reagent
          key: 'x'
  -
    id: prepend-err-dup
    reaction:
      > rxn = Reaction()
      > rxn.prepend_reagent('x')
      > rxn.prepend_reagent('x')
    error:
      type: UsageError
      message: 'x' is already a reagent
  -
    id: insert
    reaction:
      > rxn = Reaction()
      > rxn.insert_reagent('x', 0)
      > rxn.insert_reagent('y', 1)
      > rxn.insert_reagent('z', 1)
    expected:
      reagents:
        -
          class: Reagent
          key: 'x'
        -
          class: Reagent
          key: 'z'
        -
          class: Reagent
          key: 'y'
  -
    id: insert-before
    reaction:
      > rxn = Reaction()
      > rxn.insert_reagent('x', 0)
      > rxn.insert_reagent('y', before('x'))
    expected:
      reagents:
        -
          class: Reagent
          key: 'y'
        -
          class: Reagent
          key: 'x'
  -
    id: insert-after
    reaction:
      > rxn = Reaction()
      > rxn.insert_reagent('x', 0)
      > rxn.insert_reagent('y', after('x'))
    expected:
      reagents:
        -
          class: Reagent
          key: 'x'
        -
          class: Reagent
          key: 'y'
  -
    id: insert-err-dup
    reaction:
      > rxn = Reaction()
      > rxn.insert_reagent('x', 0)
      > rxn.insert_reagent('x', 0)
    error:
      type: UsageError
      message: 'x' is already a reagent
  -
    id: reorder
    reaction:
      > rxn = Reaction()
      > rxn.append_reagent('x')
      > rxn.append_reagent('y')
      > rxn.append_reagent('z')
      > rxn.reorder_reagent('z', 0)
    expected:
      reagents:
        -
          class: Reagent
          key: 'z'
        -
          class: Reagent
          key: 'x'
        -
          class: Reagent
          key: 'y'
  -
    id: reorder-before
    reaction:
      > rxn = Reaction()
      > rxn.append_reagent('x')
      > rxn.append_reagent('y')
      > rxn.append_reagent('z')
      > rxn.reorder_reagent('z', before('x'))
    expected:
      reagents:
        -
          class: Reagent
          key: 'z'
        -
          class: Reagent
          key: 'x'
        -
          class: Reagent
          key: 'y'
  -
    id: reorder-after
    reaction:
      > rxn = Reaction()
      > rxn.append_reagent('x')
      > rxn.append_reagent('y')
      > rxn.append_reagent('z')
      > rxn.reorder_reagent('x', after('z'))
    expected:
      reagents:
        -
          class: Reagent
          key: 'y'
        -
          class: Reagent
          key: 'z'
        -
          class: Reagent
          key: 'x'
  -
    id: reorder-err-not-found
    reaction:
      > rxn = Reaction()
      > rxn.reorder_reagent('x', 0)
    error:
      type: ValueError
      message: no 'x' reagent in the reaction
  -
    id: remove
    reaction:
      > rxn = Reaction()
      > rxn.append_reagent('x')
      > rxn.remove_reagent('x')
    expected:
      reagents:
        []
  -
    id: remove
    reaction:
      > rxn = Reaction()
      > rxn.append_reagent('x')
      > rxn.append_reagent('y')
      > rxn.remove_reagent('y')
    expected:
      reagents:
        -
          class: Reagent
          key: 'x'
  -
    id: remove
    reaction:
      > rxn = Reaction()
      > rxn.append_reagent('x')
      > rxn.append_reagent('y')
      > rxn.remove_reagent('x')
    expected:
      reagents:
        -
          class: Reagent
          key: 'y'
  -
    id: remove-solvent
    reaction:
      > rxn = Reaction()
      > rxn['w'].volume = 'to 5 µL'
      > rxn['x'].volume = '1 µL'
      > rxn.remove_reagent('w')
    expected:
      volume: '1 µL'
      solvent: None
      reagents:
        -
          class: Reagent
          key: 'x'
          volume: Q('1 µL')
  -
    id: remove-err-not-found
    reaction:
      > rxn = Reaction()
      > rxn.remove_reagent('x')
    error:
      type: ValueError
      message: no 'x' reagent in the reaction
  -
    id: getitem
    reaction:
      > rxn = Reaction()
      > rxn['x'].volume = '1 µL'
      > rxn['y'].volume = '2 µL'
    expected:
      reagents:
        -
          class: Reagent
          key: 'x'
          volume: Q('1 µL')
        -
          class: Reagent
          key: 'y'
          volume: Q('2 µL')
  -
    id: getitem-solvent
    reaction:
      > rxn = Reaction()
      > rxn['w'].set_as_solvent()
      > rxn['x'].volume = '2 µL'
      > rxn.volume = '5 µL'
    expected:
      volume: Q('5 µL')
      solvent: 'w'
      reagents:
        -
          class: Solvent
          key: 'w'
          volume: Q('3 µL')
        -
          class: Reagent
          key: 'x'
          volume: Q('2 µL')
  -
    id: getitem-solvent-copy-attrs
    reaction:
      > rxn = Reaction()
      > rxn['w'].flags = {'a'}
      > rxn['w'].catalog_num = 'b'
      > rxn['w'].misc_attr = 'c'
      > rxn['w'].set_as_solvent()
      > rxn['x'].volume = '2 µL'
      > rxn.volume = '5 µL'
    expected:
      volume: Q('5 µL')
      solvent: 'w'
      reagents:
        -
          class: Solvent
          key: 'w'
          volume: Q('3 µL')
          flags: {'a'}
          catalog_num: 'b'
          misc_attr: 'c'
        -
          class: Reagent
          key: 'x'
          volume: Q('2 µL')
  -
    id: getitem-solvent-err-dup
    reaction:
      > rxn = Reaction()
      > rxn['w'].set_as_solvent()
      > rxn['v'].set_as_solvent()
    error:
      type: UsageError
      message: cannot set 'v' as solvent; 'w' is already the solvent
  -
    id: getitem-solvent-err-volume
    reaction:
      > rxn = Reaction()
      > rxn['w'].volume = '3 µL'
      > rxn['w'].set_as_solvent()
    error:
      type: UsageError
      message: 'w' has a volume (3 µL); cannot set as solvent
  -
    id: getitem-solvent-err-stock
    reaction:
      > rxn = Reaction()
      > rxn['w'].stock_conc = '1 µM'
      > rxn['w'].set_as_solvent()
    error:
      type: UsageError
      message: 'w' has a stock concentration (1 µM); cannot set as solvent
  -
    id: getitem-solvent-volume-str
    reaction:
      > rxn = Reaction()
      > rxn['w'].volume = 'to 5 µL'
      > rxn['x'].volume = '2 µL'
    expected:
      volume: Q('5 µL')
      solvent: 'w'
      reagents:
        -
          class: Solvent
          key: 'w'
          volume: Q('3 µL')
        -
          class: Reagent
          key: 'x'
          volume: Q('2 µL')
  -
    id: getitem-solvent-volume-to
    reaction:
      > rxn = Reaction()
      > rxn['w'].volume = To(Quantity(5, 'µL'))
      > rxn['x'].volume = '2 µL'
    expected:
      volume: Q('5 µL')
      solvent: 'w'
      reagents:
        -
          class: Solvent
          key: 'w'
          volume: Q('3 µL')
        -
          class: Reagent
          key: 'x'
          volume: Q('2 µL')
  -
    id: setitem-reagent-intra
    reaction:
      > rxn = Reaction()
      > rxn['x'].name = 'x*'
      > rxn['x'].volume = '1 µL'
      > rxn['x'].stock_conc = '1 µM'
      > rxn['x'].flags = {'a'}
      > rxn['x'].catalog_num = 'b'
      > rxn['x'].user_attr = 1
      > rxn['x'].user_mutable_attr = []
      >
      > # Make sure changes don't affect 'x' or 'z'.
      > rxn['y'] = rxn['x']
      > rxn['y'].name = 'y*'
      > rxn['y'].volume = '2 µL'
      > rxn['y'].stock_conc = '2 µM'
      > rxn['y'].flags.add('b')
      > rxn['y'].catalog_num = 'c'
      > rxn['y'].user_attr = 2
      > rxn['y'].user_mutable_attr.append(1)
      >
      > # Make sure 'x' is copied faithfully.
      > rxn['z'] = rxn['x']
    expected:
      reagents:
        -
          key: 'x'
          name: 'x*'
          volume: Q('1 µL')
          stock_conc: Q('1 µM')
          flags: {'a'}
          catalog_num: 'b'
          user_attr: 1
          user_mutable_attr: []
        -
          key: 'y'
          name: 'y*'
          volume: Q('2 µL')
          stock_conc: Q('2 µM')
          flags: {'a', 'b'}
          catalog_num: 'c'
          user_attr: 2
          user_mutable_attr: [1]
        -
          key: 'z'
          name: 'x*'
          volume: Q('1 µL')
          stock_conc: Q('1 µM')
          flags: {'a'}
          catalog_num: 'b'
          user_attr: 1
          user_mutable_attr: []
  -
    id: setitem-reagent-intra-overwrite-reagent
    reaction:
      > rxn = Reaction()
      > rxn['x'].volume = '1 µL'
      > rxn['y'].volume = '2 µL'
      > rxn['y'] = rxn['x']
    expected:
      reagents:
        -
          key: 'x'
          volume: Q('1 µL')
        -
          key: 'y'
          volume: Q('1 µL')
  -
    id: setitem-reagent-intra-overwrite-solvent
    reaction:
      > rxn = Reaction()
      > rxn['w'].volume = 'to 5 µL'
      > rxn['x'].volume = '1 µL'
      > rxn['x'].stock_conc = '1 µM'
      > rxn['w'] = rxn['x']
      > rxn['w'].volume = '2 µL'
    expected:
      solvent: None
      volume: Q('3 µL')
      reagents:
        -
          class: Reagent
          key: 'w'
          volume: Q('2 µL')
          stock_conc: '1 µM'
        -
          class: Reagent
          key: 'x'
          volume: Q('1 µL')
          stock_conc: '1 µM'
  -
    id: setitem-reagent-inter
    reaction:
      > rxns = Reaction(), Reaction()
      > rxns[0]['x'].name = 'x*'
      > rxns[0]['x'].volume = '1 µL'
      > rxns[0]['x'].stock_conc = '1 µM'
      > rxns[0]['x'].flags = {'a'}
      > rxns[0]['x'].catalog_num = 'b'
      > rxns[0]['x'].user_attr = 1
      > rxns[0]['x'].user_mutable_attr = []
      >
      > # Make sure changes don't affect 'x' or 'z'.
      > rxns[1]['y'] = rxns[0]['x']
      > rxns[1]['y'].name = 'y*'
      > rxns[1]['y'].volume = '2 µL'
      > rxns[1]['y'].stock_conc = '2 µM'
      > rxns[1]['y'].flags.add('b')
      > rxns[1]['y'].catalog_num = 'c'
      > rxns[1]['y'].user_attr = 2
      > rxns[1]['y'].user_mutable_attr.append(1)
      >
      > # Make sure 'x' is copied faithfully.
      > rxns[1]['z'] = rxns[0]['x']
    expected:
      -
        reagents:
          -
            key: 'x'
            name: 'x*'
            volume: Q('1 µL')
            stock_conc: Q('1 µM')
            flags: {'a'}
            catalog_num: 'b'
            user_attr: 1
            user_mutable_attr: []
      -
        reagents:
          -
            key: 'y'
            name: 'y*'
            volume: Q('2 µL')
            stock_conc: Q('2 µM')
            flags: {'a', 'b'}
            catalog_num: 'c'
            user_attr: 2
            user_mutable_attr: [1]
          -
            key: 'z'
            name: 'x*'
            volume: Q('1 µL')
            stock_conc: Q('1 µM')
            flags: {'a'}
            catalog_num: 'b'
            user_attr: 1
            user_mutable_attr: []
  -
    id: setitem-reagent-inter-overwrite-reagent
    reaction:
      > rxns = Reaction(), Reaction()
      > rxns[0]['x'].volume = '1 µL'
      > rxns[1]['y'].volume = '2 µL'
      > rxns[1]['y'] = rxns[0]['x']
    expected:
      -
        reagents:
          -
            key: 'x'
            volume: Q('1 µL')
      -
        reagents:
          -
            key: 'y'
            volume: Q('1 µL')
  -
    id: setitem-reagent-inter-overwrite-solvent
    reaction:
      > rxns = Reaction(), Reaction()
      > rxns[0]['x'].volume = '1 µL'
      > rxns[0]['x'].stock_conc = '1 µM'
      > rxns[1]['w'].volume = 'to 5 µL'
      > rxns[1]['w'] = rxns[0]['x']
      > rxns[1]['w'].volume = '2 µL'
    expected:
      -
        solvent: None
        volume: Q('1 µL')
        reagents:
          -
            class: Reagent
            key: 'x'
            volume: Q('1 µL')
            stock_conc: '1 µM'
      -
        solvent: None
        volume: Q('2 µL')
        reagents:
          -
            class: Reagent
            key: 'w'
            volume: Q('2 µL')
            stock_conc: '1 µM'
  -
    id: setitem-solvent-intra
    reaction:
      > rxn = Reaction()
      > rxn['w'].set_as_solvent()
      > rxn['v'] = rxn['w']
    error:
      type: UsageError
      message: cannot make 'v' the solvent; 'w' is already the solvent
  -
    id: setitem-solvent-intra-overwrite-reagent
    reaction:
      > rxn = Reaction()
      > rxn['w'].set_as_solvent()
      > rxn['v'].volume = '1 µL'
      > rxn['v'] = rxn['w']
    error:
      type: UsageError
      message: cannot make 'v' the solvent; 'w' is already the solvent
  -
    id: setitem-solvent-inter
    reaction:
      > rxns = Reaction(), Reaction(), Reaction()
      > rxns[0]['w'].name = 'w*'
      > rxns[0]['w'].volume = 'to 5 µL'
      > rxns[0]['w'].flags = {'a'}
      > rxns[0]['w'].catalog_num = 'b'
      > rxns[0]['w'].user_attr = 1
      > rxns[0]['w'].user_mutable_attr = []
      >
      > # Make sure changes don't affect 'w' or 'u'.
      > rxns[1]['v'] = rxns[0]['w']
      > rxns[1]['v'].name = 'v*'
      > rxns[1]['v'].flags.add('b')
      > rxns[1]['v'].catalog_num = 'c'
      > rxns[1]['v'].user_attr = 2
      > rxns[1]['v'].user_mutable_attr.append(1)
      > rxns[1].volume = '4 µL'
      >
      > # Make sure 'w' is copied faithfully.
      > rxns[2]['u'] = rxns[0]['w']
    expected:
      -
        volume: Q('5 µL')
        reagents:
          -
            key: 'w'
            name: 'w*'
            volume: Q('5 µL')
            flags: {'a'}
            catalog_num: 'b'
            user_attr: 1
            user_mutable_attr: []
      -
        volume: Q('4 µL')
        reagents:
          -
            key: 'v'
            name: 'v*'
            volume: Q('4 µL')
            flags: {'a', 'b'}
            catalog_num: 'c'
            user_attr: 2
            user_mutable_attr: [1]
      -
        volume: None
        reagents:
          -
            key: 'u'
            name: 'w*'
            flags: {'a'}
            catalog_num: 'b'
            user_attr: 1
            user_mutable_attr: []
  -
    id: setitem-solvent-inter-overwrite-reagent
    reaction:
      > rxns = Reaction(), Reaction()
      > rxns[0]['w'].set_as_solvent()
      > rxns[0]['w'].attr_keep = 1
      > rxns[0]['w'].attr_change = 1
      >
      > rxns[1]['v'].volume = '1 µL'
      > rxns[1]['v'] = rxns[0]['w']
      > rxns[1]['v'].attr_change = 2
    expected:
      -
        reagents:
          -
            class: Solvent
            key: 'w'
            attr_keep: 1
            attr_change: 1
      -
        reagents:
          -
            class: Solvent
            key: 'v'
            attr_keep: 1
            attr_change: 2
  -
    id: setitem-solvent-inter-overwrite-solvent
    reaction:
      > rxns = Reaction(), Reaction()
      >
      > rxns[0]['w'].volume = 'to 5 µL'
      > rxns[0]['w'].attr_keep = 1
      > rxns[0]['w'].attr_change = 1
      >
      > rxns[1]['v'].volume = 'to 3 µL'
      > rxns[1]['v'] = rxns[0]['w']
      > rxns[1]['v'].attr_change = 2
    expected:
      -
        solvent: 'w'
        volume: Q('5 µL')
        reagents:
          -
            class: Solvent
            key: 'w'
            volume: Q('5 µL')
            attr_keep: 1
            attr_change: 1
      -
        solvent: 'v'
        # The volume isn't copied with the solvent.
        volume: Q('3 µL')
        reagents:
          -
            class: Solvent
            key: 'v'
            volume: Q('3 µL')
            attr_keep: 1
            attr_change: 2
  -
    id: delitem
    # The `remove` tests thoroughly exercise this functionality.  This test 
    # just makes sure that `__delitem__` is hooked up correctly.
    reaction:
      > rxn = Reaction()
      > rxn['x'].volume = '1 µL'
      > del rxn['x']
    expected:
      reagents:
        []
  -
    id: copy
    reaction:
      > rxns = [Reaction()]
      >
      > rxns[0]['w'].name = 'w*'
      > rxns[0]['w'].volume = 'to 5 µL'
      > rxns[0]['w'].flags = {'a'}
      > rxns[0]['w'].catalog_num = 'b'
      > rxns[0]['w'].user_attr = 1
      > rxns[0]['w'].user_mutable_attr = []
      >
      > rxns[0]['x'].name = 'x*'
      > rxns[0]['x'].volume = '1 µL'
      > rxns[0]['x'].stock_conc = '1 µM'
      > rxns[0]['x'].flags = {'c'}
      > rxns[0]['x'].catalog_num = 'd'
      > rxns[0]['x'].user_attr = 2
      > rxns[0]['x'].user_mutable_attr = []
      >
      > # Make sure changes don't affect the original.
      > rxns.append(rxns[0].copy())
      >
      > rxns[1]['w'].name = 'v*'
      > rxns[1]['w'].flags.add('e')
      > rxns[1]['w'].catalog_num = 'f'
      > rxns[1]['w'].user_attr = 3
      > rxns[1]['w'].user_mutable_attr.append(4)
      >
      > rxns[1]['x'].name = 'y*'
      > rxns[1]['x'].volume = '2 µL'
      > rxns[1]['x'].stock_conc = '2 µM'
      > rxns[1]['x'].flags.add('g')
      > rxns[1]['x'].catalog_num = 'h'
      > rxns[1]['x'].user_attr = 5
      > rxns[1]['x'].user_mutable_attr.append(6)
      >
      > # Make sure the original is copied faithfully.
      > rxns.append(rxns[0].copy())

    expected:
      -
        volume: Q('5 µL')
        solvent: 'w'
        reagents:
          -
            class: Solvent
            key: 'w'
            name: 'w*'
            volume: Q('4 µL')
            flags: {'a'}
            catalog_num: 'b'
            user_attr: 1
            user_mutable_attr: []
          -
            class: Reagent
            key: 'x'
            name: 'x*'
            volume: Q('1 µL')
            stock_conc: Q('1 µM')
            flags: {'c'}
            catalog_num: 'd'
            user_attr: 2
            user_mutable_attr: []
      -
        volume: Q('5 µL')
        solvent: 'w'
        reagents:
          -
            class: Solvent
            key: 'w'
            name: 'v*'
            volume: Q('3 µL')
            flags: {'a', 'e'}
            catalog_num: 'f'
            user_attr: 3
            user_mutable_attr: [4]
          -
            class: Reagent
            key: 'x'
            name: 'y*'
            volume: Q('2 µL')
            stock_conc: Q('2 µM')
            flags: {'c', 'g'}
            catalog_num: 'h'
            user_attr: 5
            user_mutable_attr: [6]
      -
        volume: Q('5 µL')
        solvent: 'w'
        reagents:
          -
            class: Solvent
            key: 'w'
            name: 'w*'
            volume: Q('4 µL')
            flags: {'a'}
            catalog_num: 'b'
            user_attr: 1
            user_mutable_attr: []
          -
            class: Reagent
            key: 'x'
            name: 'x*'
            volume: Q('1 µL')
            stock_conc: Q('1 µM')
            flags: {'c'}
            catalog_num: 'd'
            user_attr: 2
            user_mutable_attr: []
  -
    id: key-reagent
    reaction:
      > rxn = Reaction()
      > rxn['x'].volume = '1 µL'
      > rxn['x'].key = 'y'
    expected:
      reagents:
        -
          key: 'y'
          name: 'x'
          volume: Q('1 µL')
  -
    id: key-solvent
    reaction:
      > rxn = Reaction()
      > rxn['w'].volume = 'to 5 µL'
      > rxn['w'].key = 'v'
    expected:
      volume: Q('5 µL')
      reagents:
        -
          key: 'v'
          name: 'w'
          volume: Q('5 µL')
  -
    id: key-keep-name
    reaction:
      > rxn = Reaction()
      > rxn['x'].volume = '1 µL'
      > rxn['x'].name = 'A'
      > rxn['x'].key = 'y'
    expected:
      reagents:
        -
          key: 'y'
          name: 'A'
          volume: Q('1 µL')
  -
    id: key-err-dup
    reaction:
      > rxn = Reaction()
      > rxn['x'].volume = '1 µL'
      > rxn['y'].volume = '2 µL'
      > rxn['x'].key = 'y'
    error:
      type: UsageError
      message: cannot change 'x' key to 'y'; new key already in use

test_reaction_from_cols:
  -
    id: solvent-only
    cols:
      reagent:
        - 'w'
      volume:
        - 'to 5 µL'
      master_mix:
        - 'y'

    expected:
      volume: Q('5 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
          master_mix: True
  -
    id: reagent-only
    cols:
      reagent:
        - 'x'
      stock_conc:
        - '2x'
      volume:
        - '3 µL'
      master_mix:
        - 'y'

    expected:
      volume: Q('3 µL')
      reagents:
        -
          name: 'x'
          volume: Q('3 µL')
          stock_conc: '2x'
          master_mix: True
  -
    id: solvent-and-reagent
    cols:
      reagent:
        - 'w'
        - 'x'
      stock_conc:
        - ''
        - '2x'
      volume:
        - 'to 8 µL'
        - '3 µL'
      master_mix:
        - 'y'
        - 'n'

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
          master_mix: True
        -
          name: 'x'
          volume: Q('3 µL')
          stock_conc: '2x'
          master_mix: False
  -
    id: stock-with-solvent
    cols:
      reagent:
        - 'w'
        - 'x'
      stock_conc:
        - ''
        - '2x'
      volume:
        - 'to 8 µL'
        - '3 µL'
      master_mix:
        - 'y'
        - 'n'

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
          master_mix: True
        -
          name: 'x'
          volume: Q('3 µL')
          stock_conc: '2x'
          master_mix: False
  -
    id: conc-with-solvent
    cols:
      reagent:
        - 'w'
        - 'x'
      stock_conc:
        - ''
        - '4x'
      conc:
        - ''
        - '1x'
      volume:
        - 'to 8 µL'
        - ''

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('6 µL')
        -
          name: 'x'
          volume: Q('2 µL')
          stock_conc: '4x'
          conc: '1x'
  -
    id: conc-volume-with-solvent
    cols:
      reagent:
        - 'w'
        - 'x'
        - 'y'
      stock_conc:
        - ''
        - '4x'
        - ''
      conc:
        - ''
        - '1x'
        - ''
      volume:
        - 'to 8 µL'
        - ''
        - '1 µL'

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
        -
          name: 'x'
          volume: Q('2 µL')
          stock_conc: '4x'
          conc: '1x'
        -
          name: 'y'
          volume: Q('1 µL')
  -
    id: conc-without-solvent
    cols:
      reagent:
        - 'x'
        - 'y'
      stock_conc:
        - ''
        - '4x'
      conc:
        - ''
        - '1x'
      volume:
        - '6 µL'
        - ''

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'x'
          volume: Q('6 µL')
        -
          name: 'y'
          volume: Q('2 µL')
          stock_conc: '4x'
          conc: '1x'
  -
    id: column-aliases
    cols:
      Reagent:
        - 'w'
        - 'x'
      Stock:
        - ''
        - '2x'
      Volume:
        - 'to 8 µL'
        - '3 µL'
      MM?:
        - 'y'
        - 'n'

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
          master_mix: True
        -
          name: 'x'
          volume: Q('3 µL')
          stock_conc: '2x'
          master_mix: False
  -
    id: extra-columns
    cols:
      reagent:
        - 'w'
        - 'x'
      stock_conc:
        - ''
        - '2x'
      volume:
        - 'to 8 µL'
        - '3 µL'
      master_mix:
        - 'y'
        - 'n'
      note:
        - 'lorem'
        - 'ipsum'

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
          master_mix: True
        -
          name: 'x'
          volume: Q('3 µL')
          stock_conc: '2x'
          master_mix: False
  -
    id: assume-master-mix-if-col-missing
    cols:
      reagent:
        - 'w'
        - 'x'
      stock_conc:
        - ''
        - '2x'
      volume:
        - 'to 8 µL'
        - '3 µL'

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
          master_mix: True
        -
          name: 'x'
          volume: Q('3 µL')
          stock_conc: '2x'
          master_mix: True
  -
    id: default-values
    cols:
      reagent:
        - 'w'
        - 'x'
      volume:
        - 'to 8 µL'
        - '3 µL'
      master_mix:
        - 'y'
        - 'n'

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
          master_mix: True
        -
          name: 'x'
          volume: Q('3 µL')
          stock_conc: None
          master_mix: False
  -
    id: default-values
    cols:
      reagent:
        - 'w'
        - 'x'
      stock_conc:
        - ''
        - '2x'
      volume:
        - 'to 8 µL'
        - '3 µL'
      master_mix:
        - 'n'
        - 'n'

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
          master_mix: False
        -
          name: 'x'
          volume: Q('3 µL')
          stock_conc: '2x'
          master_mix: False
  -
    id: whitespace
    cols:
      reagent:
        - ' w' 
        - ' x' 
      stock_conc:
        - ''
        - ' 2x' 
      volume:
        - ' to 8 µL' 
        - ' 3 µL' 
      master_mix:
        - ' y' 
        - ' n' 

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
          master_mix: True
        -
          name: 'x'
          volume: Q('3 µL')
          stock_conc: '2x'
          master_mix: False
  -
    id: non-strings
    cols:
      reagent:
        - 'w' 
        - 'x' 
      stock_conc:
        - None
        - Quantity(2, 'x')
      volume:
        - To(Quantity(8, 'µL'))
        - Quantity(3, 'µL')
      master_mix:
        - True
        - False

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
          master_mix: True
        -
          name: 'x'
          volume: Q('3 µL')
          stock_conc: '2x'
          master_mix: False

  -
    id: err-no-reagents
    cols:
      reagent:
        []
      stock_conc:
        []
      volume:
        []
      master_mix:
        []
    error:
      type: UsageError
      message: at least one reagent
  -
    id: err-duplicate-cols
    cols:
      reagent:
        - 'w'
        - 'x'
      Reagent:
        - 'w'
        - 'x'
      stock_conc:
        - ''
        - '2x'
      volume:
        - 'to 8 µL'
        - '3 µL'
      master_mix:
        - 'y'
        - 'n'
    error:
      type: UsageError
      message: multiple 'reagent' columns found: 'Reagent', 'reagent'
  -
    id: err-no-reagent-col
    cols:
      stock_conc:
        - ''
        - '2x'
      volume:
        - 'to 5 µL'
        - '3 µL'
      master_mix:
        - 'y'
        - 'n'
    error:
      type: UsageError
      message: no 'reagent' column
  -
    id: err-no-volume-col
    cols:
      reagent:
        - 'w'
        - 'x'
      stock_conc:
        - ''
        - '2x'
      master_mix:
        - 'y'
        - 'n'
    error:
      type: UsageError
      message: no 'volume' column
  -
    id: err-inconsistent-rows
    cols:
      reagent:
        - 'w'
      stock_conc:
        - ''
        - '2x'
      volume:
        - 'to 5 µL'
        - '3 µL'
      master_mix:
        - 'y'
        - 'n'
    error:
      type: UsageError
      message: different numbers of rows: 1, 2
  -
    id: err-missing-names
    cols:
      reagent:
        - ''
        - 'x'
      stock_conc:
        - ''
        - '2x'
      volume:
        - 'to 5 µL'
        - '3 µL'
      master_mix:
        - 'y'
        - 'n'
    error:
      type: UsageError
      message: missing names
  -
    id: err-missing-vol
    cols:
      reagent:
        - 'w'
        - 'x'
      stock_conc:
        - ''
        - '2x'
      volume:
        - ''
        - '3 µL'
      master_mix:
        - 'y'
        - 'n'
    error:
      type: UsageError
      message: must specify either volume or concentration for 'w'
  -
    id: err-vol-and-conc
    cols:
      reagent:
        - 'w'
        - 'x'
      stock_conc:
        - ''
        - '2x'
      conc:
        - ''
        - '1x'
      volume:
        - 'to 10 µL'
        - '5 µL'
    error:
      type: UsageError
      message: cannot specify volume ('5 µL') and concentration ('1x') for 'x'
  -
    id: err-two-solvents
    cols:
      reagent:
        - 'w'
        - 'x'
      stock_conc:
        - ''
        - '2x'
      volume:
        - 'to 8 µL'
        - 'to 8 µL'
      master_mix:
        - 'y'
        - 'n'
    error:
      type: UsageError
      message: cannot set 'x' as solvent; 'w' is already the solvent
  -
    id: err-solvent-conc
    cols:
      reagent:
        - 'w'
        - 'x'
      conc:
        - '1x'
        - ''
      volume:
        - 'to 8 µL'
        - '3 µL'
    error:
      type: UsageError
      message: cannot specify a concentration ('1x') for the solvent ('w')
  -
    id: err-solvent-stock-conc
    cols:
      reagent:
        - 'w'
        - 'x'
      stock_conc:
        - '2x'
        - '2x'
      volume:
        - 'to 8 µL'
        - '3 µL'
    error:
      type: UsageError
      message: cannot specify a stock concentration ('2x') for the solvent ('w')
  -
    id: err-parse-bool
    cols:
      reagent:
        - 'w'
        - 'x'
      stock_conc:
        - ''
        - '2x'
      volume:
        - 'to 8 µL'
        - '3 µL'
      master_mix:
        - 'maybe'
        - 'n'
    error:
      type: UsageError
      message: expected 'yes' or 'no', got 'maybe'

test_reaction_from_rows:
  -
    rows:
      -
        reagent: 'w'
        volume: 'to 8 µL'
      -
        reagent: 'x'
        stock_conc: '2x'
        volume: '3 µL'

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
        -
          name: 'x'
          stock_conc: '2x'
          volume: Q('3 µL')

test_reaction_from_text:
  -
    id: base
    text:
      > Reagent  Stock   Volume  MM?
      > =======  =====  =======  ===
      > w               to 8 µL  yes
      > x           2x     3 µL   no

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
          master_mix: True
        -
          name: 'x'
          volume: Q('3 µL')
          stock_conc: '2x'
          master_mix: False
  -
    id: base
    text:
      > MM?   Volume  Stock  Reagent
      > ===  =======  =====  =======
      > yes  to 8 µL         w
      >  no     3 µL     2x  x

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
          master_mix: True
        -
          name: 'x'
          volume: Q('3 µL')
          stock_conc: '2x'
          master_mix: False
  -
    id: empty-cell
    text:
      > Reagent  Stock   Volume  MM?
      > =======  =====  =======  ===
      > w               to 8 µL  yes
      > x           2x     3 µL

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
          master_mix: True
        -
          name: 'x'
          volume: Q('3 µL')
          stock_conc: '2x'
          master_mix: False
  -
    id: flags
    text:
      > Reagent  Stock   Volume  MM?  Flags
      > =======  =====  =======  ===  =====
      > w               to 8 µL  yes  a
      > x           2x     3 µL   no  a,b

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
          master_mix: True
          flags: {'a'}
        -
          name: 'x'
          volume: Q('3 µL')
          stock_conc: '2x'
          master_mix: False
          flags: {'a', 'b'}
  -
    id: catalog-num
    text:
      > Reagent  Stock   Volume  MM?  Cat
      > =======  =====  =======  ===  ===
      > w               to 8 µL  yes
      > x           2x     3 µL   no  101

    expected:
      volume: Q('8 µL')
      reagents:
        -
          name: 'w'
          volume: Q('5 µL')
          master_mix: True
          catalog_num: None
        -
          name: 'x'
          volume: Q('3 µL')
          stock_conc: '2x'
          master_mix: False
          catalog_num: '101'
  -
    id: err-0-lines
    text:
      >
    error:
      type: UsageError
      message: has 0 lines
  -
    id: err-1-line
    text:
      > Reagent  Stock  Volume  MM?
    error:
      type: UsageError
      message: has 1 line
  -
    id: err-2-lines
    text:
      > Reagent  Stock  Volume  MM?
      > =======  =====  ======  ===
    error:
      type: UsageError
      message: has 2 lines
  -
    id: err-underline
    text:
      > Reagent  Stock   Volume  MM?
      > ~~~~~~~  ~~~~~  ~~~~~~~  ~~~
      > w               to 8 µL  yes
      > x           2x     3 µL   no
    error:
      type: UsageError
      message: not '~~~

test_reaction_repr:
  -
    id: empty
    reaction:
      > #!/usr/bin/env python
      > rxn = Reaction()
    expected:
      > Reaction()
  -
    id: order
    reaction:
      > #!/usr/bin/env python
      > rxn = Reaction()
      > rxn.append_reagent('x')
      > rxn.append_reagent('y')
      > rxn.append_reagent('z')
    expected:
      > Reaction(Reagent('x'), Reagent('y'), Reagent('z'))
  -
    id: reagent-name
    reaction:
      > #!/usr/bin/env python
      > rxn = Reaction()
      > rxn['x'].name = 'y'
    expected:
      > Reaction(Reagent('x', name='y'))
  -
    id: reagent-volume
    reaction:
      > #!/usr/bin/env python
      > rxn = Reaction()
      > rxn['x'].volume = '3 µL'
    expected:
      > Reaction(Reagent('x', volume=Quantity(3.0, 'µL')))
  -
    id: reagent-stock
    reaction:
      > #!/usr/bin/env python
      > rxn = Reaction()
      > rxn['x'].stock_conc = '1 µM'
    expected:
      > Reaction(Reagent('x', stock_conc=Quantity(1.0, 'µM')))
  -
    id: reagent-flags
    reaction:
      > #!/usr/bin/env python
      > rxn = Reaction()
      > rxn['x'].flags = {'a'}
    expected:
      > Reaction(Reagent('x', flags={'a'}))
  -
    id: reagent-catalog-num
    reaction:
      > #!/usr/bin/env python
      > rxn = Reaction()
      > rxn['x'].catalog_num = 'a'
    expected:
      > Reaction(Reagent('x', catalog_num='a'))
  -
    id: solvent-name
    reaction:
      > #!/usr/bin/env python
      > rxn = Reaction()
      > rxn['w'].set_as_solvent()
      > rxn['w'].name = 'v'
    expected:
      > Reaction(Solvent('w', name='v'))
  -
    id: solvent-volume
    reaction:
      > #!/usr/bin/env python
      > rxn = Reaction()
      > rxn['w'].volume = 'to 8 µL'
    expected:
      > Reaction(Solvent('w'), volume=Quantity(8.0, 'µL'))
  -
    id: solvent-flags
    reaction:
      > #!/usr/bin/env python
      > rxn = Reaction()
      > rxn['w'].set_as_solvent()
      > rxn['w'].flags = {'a'}
    expected:
      > Reaction(Solvent('w', flags={'a'}))
  -
    id: solvent-catalog-num
    reaction:
      > #!/usr/bin/env python
      > rxn = Reaction()
      > rxn['w'].set_as_solvent()
      > rxn['w'].catalog_num = 'a'
    expected:
      > Reaction(Solvent('w', catalog_num='a'))

test_reaction_eq:
  -
    id: empty
    a:
      > rxn = Reaction()
    b:
      > rxn = Reaction()
    expected: True
  -
    id: type-diff
    a:
      > rxn = Reaction()
    b:
      > rxn = None

    expected: False
  -
    id: len-same
    a:
      > rxn = Reaction()
      > rxn.append_reagent('x')
    b:
      > rxn = Reaction()
      > rxn.append_reagent('x')

    expected: True
  -
    id: len-diff
    a:
      > rxn = Reaction()
      > rxn.append_reagent('x')
    b:
      > rxn = Reaction()
      > rxn.append_reagent('x')
      > rxn.append_reagent('y')

    expected: False
  -
    id: order-same
    a:
      > rxn = Reaction()
      > rxn.append_reagent('x')
      > rxn.append_reagent('y')
    b:
      > rxn = Reaction()
      > rxn.append_reagent('x')
      > rxn.append_reagent('y')

    expected: True
  -
    id: order-diff
    a:
      > rxn = Reaction()
      > rxn.append_reagent('y')
      > rxn.append_reagent('x')
    b:
      > rxn = Reaction()
      > rxn.append_reagent('x')
      > rxn.append_reagent('y')

    expected: False
  -
    id: reagent-same
    a:
      > rxn = Reaction()
      > rxn['x'].name = 'y'
      > rxn['x'].volume = '1 µL'
      > rxn['x'].stock_conc = '1 µM'
      > rxn['x'].flags = {'a'}
      > rxn['x'].catalog_num = 'b'
    b:
      > rxn = Reaction()
      > rxn['x'].name = 'y'
      > rxn['x'].volume = '1 µL'
      > rxn['x'].stock_conc = '1 µM'
      > rxn['x'].flags = {'a'}
      > rxn['x'].catalog_num = 'b'

    expected: True
  -
    id: reagent-diff-key
    a:
      > rxn = Reaction()
      > rxn.append_reagent('x')
    b:
      > rxn = Reaction()
      > rxn['x'].key = 'y'

    # Keys are considered an implementation detail, and are not considered when 
    # comparing two reactions.  All that matters is if the reagents have the 
    # same names.
    expected: True
  -
    id: reagent-diff-name
    a:
      > rxn = Reaction()
      > rxn['x'].name = 'y1'
    b:
      > rxn = Reaction()
      > rxn['x'].name = 'y2'

    expected: False
  -
    id: reagent-diff-volume
    a:
      > rxn = Reaction()
      > rxn['x'].volume = '1 µL'
    b:
      > rxn = Reaction()
      > rxn['x'].volume = '2 µL'

    expected: False
  -
    id: reagent-diff-stock-conc
    a:
      > rxn = Reaction()
      > rxn['x'].stock_conc = '1 µM'
    b:
      > rxn = Reaction()
      > rxn['x'].stock_conc = '2 µM'

    expected: False
  -
    id: reagent-diff-flags
    a:
      > rxn = Reaction()
      > rxn['x'].flags = {'a'}
    b:
      > rxn = Reaction()
      > rxn['x'].flags = {'b'}

    # Flags are not considered when calculating equality, because they are 
    # never presented to end users.
    expected: True
  -
    id: reagent-diff-catalog-num
    a:
      > rxn = Reaction()
      > rxn['x'].catalog_num = 'a'
    b:
      > rxn = Reaction()
      > rxn['x'].catalog_num = 'b'

    expected: False
  -
    id: solvent-same
    a:
      > rxn = Reaction()
      > rxn['w'].name = 'v'
      > rxn['w'].volume = 'to 8 µL'
      > rxn['w'].flags = {'a'}
      > rxn['w'].catalog_num = 'b'
    b:
      > rxn = Reaction()
      > rxn['w'].name = 'v'
      > rxn['w'].volume = 'to 8 µL'
      > rxn['w'].flags = {'a'}
      > rxn['w'].catalog_num = 'b'

    expected: True
  -
    id: solvent-diff-type
    a:
      > rxn = Reaction()
      > rxn['w'].volume = 'to 8 µL'
    b:
      > rxn = Reaction()
      > rxn['w'].volume = '8 µL'

    # The distinction between reagents and solvents doesn't matter.  All that 
    # matters is the volume ultimately presented to the user.
    expected: True
  -
    id: solvent-diff-key
    a:
      > rxn = Reaction()
      > rxn['w'].volume = 'to 8 µL'
    b:
      > rxn = Reaction()
      > rxn['_w'].volume = 'to 8 µL'
      > rxn['_w'].name = 'w'

    # See 'reagent-diff-key'.
    expected: True
  -
    id: solvent-diff-name
    a:
      > rxn = Reaction()
      > rxn['w'].set_as_solvent()
      > rxn['w'].name = 'w1'
    b:
      > rxn = Reaction()
      > rxn['w'].set_as_solvent()
      > rxn['w'].name = 'w2'

    expected: False
  -
    id: solvent-diff-volume
    a:
      > rxn = Reaction()
      > rxn['w'].volume = 'to 8 µL'
    b:
      > rxn = Reaction()
      > rxn['w'].volume = 'to 7 µL'

    expected: False
  -
    id: solvent-diff-flags
    a:
      > rxn = Reaction()
      > rxn['w'].set_as_solvent()
      > rxn['w'].flags = {'a'}
    b:
      > rxn = Reaction()
      > rxn['w'].set_as_solvent()
      > rxn['w'].flags = {'b'}

    # See `reagent-diff-flags`
    expected: True
  -
    id: solvent-diff-catalog-num
    a:
      > rxn = Reaction()
      > rxn['w'].set_as_solvent()
      > rxn['w'].catalog_num = 'a'
    b:
      > rxn = Reaction()
      > rxn['w'].set_as_solvent()
      > rxn['w'].catalog_num = 'b'

    expected: False

test_reaction_iter_nonzero:
  -
    volumes_uL:
      {}
    expected:
      []
  -
    volumes_uL:
      x: 1
    expected:
      [x]
  -
    volumes_uL:
      x: 1
      y: 1
    expected:
      [x, y]
  -
    volumes_uL:
      x: 1
      y: 0
    expected:
      [x]
  -
    volumes_uL:
      x: 1
      y: 0.005
    expected:
      [x, y]
  -
    volumes_uL:
      x: 1
      y: 0.004
    expected:
      [x]

test_reaction_volume:
  -
    id: empty
    reaction:
      > rxn = Reaction()
    expected_uL: 0
  -
    id: from-str
    reaction:
      > rxn = Reaction()
      > rxn['w'].set_as_solvent()
      > rxn.volume = '1 µL'
    expected_uL: 1
  -
    id: from-tuple
    reaction:
      > rxn = Reaction()
      > rxn['w'].set_as_solvent()
      > rxn.volume = 1, 'µL'
    expected_uL: 1
  -
    id: from-quantity
    reaction:
      > rxn = Reaction()
      > rxn['w'].set_as_solvent()
      > rxn.volume = Quantity(1, 'µL')
    expected_uL: 1
  -
    id: from-reagents-1
    reaction:
      > rxn = Reaction()
      > rxn['x'].volume = '1 µL'
    expected_uL: 1
  -
    id: from-reagents-2
    reaction:
      > rxn = Reaction()
      > rxn['x'].volume = '1 µL'
      > rxn['y'].volume = '2 µL'
    expected_uL: 3
  -
    id: err-set-without-solvent
    reaction:
      > rxn = Reaction()
      > rxn.volume = '1 µL'
    error:
      type: ValueError
      message: no solvent specified
  -
    id: err-reagent-without-volume
    reaction:
      > rxn = Reaction()
      > rxn.append_reagent('x')
    error:
      type: ValueError
      message: no volume specified for 'x'

test_reaction_repair_volumes:
  -
    donor_before: 0
    donor_after: 0
    acceptor_before: 0
    acceptor_after: 0
  -
    donor_before: 0
    donor_after: -1
    acceptor_before: -1
    acceptor_after: 0
  -
    donor_before: 0
    donor_after: 0
    acceptor_before: 1
    acceptor_after: 1
  -
    donor_before: 1
    donor_after: 1
    acceptor_before: 0
    acceptor_after: 0
  -
    donor_before: 1
    donor_after: 0
    acceptor_before: -1
    acceptor_after: 0
  -
    donor_before: 1
    donor_after: 1
    acceptor_before: 1
    acceptor_after: 1

test_format_reaction:
  -
    id: baseline
    reaction:
      > Reagent  Stock    Volume
      > =======  =====  ========
      > water           to 10 µL
      > buffer     10x      1 µL
      > enzyme      5x      2 µL

    expected:
      > Reagent  Stock    Volume
      > ────────────────────────
      > water            7.00 µL
      > buffer     10x   1.00 µL
      > enzyme      5x   2.00 µL
      > ────────────────────────
      >                 10.00 µL
  -
    id: scale=2
    reaction:
      > Reagent  Stock    Volume
      > =======  =====  ========
      > water           to 10 µL
      > buffer     10x      1 µL
      > enzyme      5x      2 µL
    kwargs:
      scale: 2

    expected:
      > Reagent  Stock    Volume        2x
      > ──────────────────────────────────
      > water            7.00 µL  14.00 µL
      > buffer     10x   1.00 µL   2.00 µL
      > enzyme      5x   2.00 µL   4.00 µL
      > ──────────────────────────────────
      >                 10.00 µL  20.00 µL
  -
    id: scale=2,3
    reaction:
      > Reagent  Stock    Volume
      > =======  =====  ========
      > water           to 10 µL
      > buffer     10x      1 µL
      > enzyme      5x      2 µL
    kwargs:
      scale: 2, 3

    expected:
      > Reagent  Stock    Volume        2x        3x
      > ────────────────────────────────────────────
      > water            7.00 µL  14.00 µL  21.00 µL
      > buffer     10x   1.00 µL   2.00 µL   3.00 µL
      > enzyme      5x   2.00 µL   4.00 µL   6.00 µL
      > ────────────────────────────────────────────
      >                 10.00 µL  20.00 µL  30.00 µL
  -
    id: show_concs=True
    reaction:
      > Reagent  Stock    Volume
      > =======  =====  ========
      > water           to 10 µL
      > buffer     10x      1 µL
      > enzyme      5x      2 µL
    kwargs:
      show_concs: True

    expected:
      > Reagent  Stock  Final    Volume
      > ───────────────────────────────
      > water                   7.00 µL
      > buffer     10x     1x   1.00 µL
      > enzyme      5x     1x   2.00 µL
      > ───────────────────────────────
      >                        10.00 µL
  -
    id: show_1x=False
    reaction:
      > Reagent  Stock    Volume
      > =======  =====  ========
      > water           to 10 µL
      > buffer     10x      1 µL
      > enzyme      5x      2 µL
    kwargs:
      scale: 2
      show_1x: False

    expected:
      > Reagent  Stock        2x
      > ────────────────────────
      > water           14.00 µL
      > buffer     10x   2.00 µL
      > enzyme      5x   4.00 µL
      > ────────────────────────
      >                 20.00 µL
  -
    id: show_totals=False
    reaction:
      > Reagent  Stock    Volume
      > =======  =====  ========
      > water           to 10 µL
      > buffer     10x      1 µL
      > enzyme      5x      2 µL
    kwargs:
      scale: 2
      show_totals: False

    expected:
      > Reagent  Stock   Volume        2x
      > ─────────────────────────────────
      > water           7.00 µL  14.00 µL
      > buffer     10x  1.00 µL   2.00 µL
      > enzyme      5x  2.00 µL   4.00 µL
  -
    id: scale-header-integer-ending-with-0
    reaction:
      > Reagent  Stock    Volume
      > =======  =====  ========
      > water           to 10 µL
      > buffer     10x      1 µL
      > enzyme      5x      2 µL
    kwargs:
      scale: 10

    expected:
      > Reagent  Stock    Volume        10x
      > ───────────────────────────────────
      > water            7.00 µL   70.00 µL
      > buffer     10x   1.00 µL   10.00 µL
      > enzyme      5x   2.00 µL   20.00 µL
      > ───────────────────────────────────
      >                 10.00 µL  100.00 µL
  -
    id: scale-header-integer-not-ending-with-0
    reaction:
      > Reagent  Stock    Volume
      > =======  =====  ========
      > water           to 10 µL
      > buffer     10x      1 µL
      > enzyme      5x      2 µL
    kwargs:
      scale: 11

    expected:
      > Reagent  Stock    Volume        11x
      > ───────────────────────────────────
      > water            7.00 µL   77.00 µL
      > buffer     10x   1.00 µL   11.00 µL
      > enzyme      5x   2.00 µL   22.00 µL
      > ───────────────────────────────────
      >                 10.00 µL  110.00 µL
  -
    id: scale-header-one-decimal-point
    reaction:
      > Reagent  Stock    Volume
      > =======  =====  ========
      > water           to 10 µL
      > buffer     10x      1 µL
      > enzyme      5x      2 µL
    kwargs:
      scale: 11.1

    expected:
      > Reagent  Stock    Volume      11.1x
      > ───────────────────────────────────
      > water            7.00 µL   77.70 µL
      > buffer     10x   1.00 µL   11.10 µL
      > enzyme      5x   2.00 µL   22.20 µL
      > ───────────────────────────────────
      >                 10.00 µL  111.00 µL
  -
    id: scale-header-two-decimal-points
    reaction:
      > Reagent  Stock    Volume
      > =======  =====  ========
      > water           to 10 µL
      > buffer     10x      1 µL
      > enzyme      5x      2 µL
    kwargs:
      scale: 11.11

    expected:
      > Reagent  Stock    Volume     ≈11.1x
      > ───────────────────────────────────
      > water            7.00 µL   77.77 µL
      > buffer     10x   1.00 µL   11.11 µL
      > enzyme      5x   2.00 µL   22.22 µL
      > ───────────────────────────────────
      >                 10.00 µL  111.10 µL
  -
    id: drop-solvent
    reaction:
      > Reagent   Stock   Volume
      > ========  =====  =======
      > water            to 3 µL
      > buffer       3x     1 µL
      > cofactor     3x     1 µL
      > enzyme       3x     1 µL

    expected:
      > Reagent   Stock   Volume
      > ────────────────────────
      > buffer       3x  1.00 µL
      > cofactor     3x  1.00 µL
      > enzyme       3x  1.00 µL
      > ────────────────────────
      >                  3.00 µL
  -
    id: drop-reagent-volume=0.001
    reaction:
      > Reagent   Stock    Volume
      > ========  =====  ========
      > water             to 3 µL
      > buffer       3x  0.001 µL
      > cofactor     3x      1 µL
      > enzyme       3x      1 µL

    expected:
      > Reagent   Stock   Volume
      > ────────────────────────
      > water            1.00 µL
      > cofactor     3x  1.00 µL
      > enzyme       3x  1.00 µL
      > ────────────────────────
      >                  3.00 µL
  -
    id: drop-reagent-volume=-0.001
    reaction:
      > Reagent   Stock     Volume
      > ========  =====  =========
      > water              to 3 µL
      > buffer       3x  -0.001 µL
      > cofactor     3x       1 µL
      > enzyme       3x       1 µL

    expected:
      > Reagent   Stock   Volume
      > ────────────────────────
      > water            1.00 µL
      > cofactor     3x  1.00 µL
      > enzyme       3x  1.00 µL
      > ────────────────────────
      >                  3.00 µL
  -
    id: no-solvent-scale=1
    reaction:
      > Reagent   Stock   Volume
      > ========  =====  =======
      > buffer       3x     1 µL
      > cofactor     3x     1 µL
      > enzyme       3x     1 µL

    expected:
      > Reagent   Stock   Volume
      > ────────────────────────
      > buffer       3x  1.00 µL
      > cofactor     3x  1.00 µL
      > enzyme       3x  1.00 µL
      > ────────────────────────
      >                  3.00 µL
  -
    id: no-solvent-num-reactions=2
    reaction:
      > Reagent   Stock   Volume
      > ========  =====  =======
      > buffer       3x     1 µL
      > cofactor     3x     1 µL
      > enzyme       3x     1 µL
    kwargs:
      scale: 2
    expected:
      > Reagent   Stock   Volume       2x
      > ─────────────────────────────────
      > buffer       3x  1.00 µL  2.00 µL
      > cofactor     3x  1.00 µL  2.00 µL
      > enzyme       3x  1.00 µL  2.00 µL
      > ─────────────────────────────────
      >                  3.00 µL  6.00 µL

test_master_mix_format_text:
  -
    id: num_reactions=1
    master_mix:
      > mm = MasterMix.from_text("""\
      > Reagent  Stock    Volume  MM?
      > =======  =====  ========  ===
      > water           to 10 µL  yes
      > buffer     10x      1 µL  yes
      > enzyme      5x      2 µL   no
      > """)
      >
      > mm.num_reactions = 1

    expected:
      > Reagent  Stock    Volume
      > ────────────────────────
      > water            7.00 µL
      > buffer     10x   1.00 µL
      > enzyme      5x   2.00 µL
      > ────────────────────────
      >                 10.00 µL
  -
    id: num_reactions=2
    master_mix:
      > mm = MasterMix.from_text("""\
      > Reagent  Stock    Volume  MM?
      > =======  =====  ========  ===
      > water           to 10 µL  yes
      > buffer     10x      1 µL  yes
      > enzyme      5x      2 µL   no
      > """)
      >
      > mm.num_reactions = 2
      > mm.extra_fraction = 0
      > mm.extra_reactions = 0

    expected:
      > Reagent  Stock    Volume        2x
      > ──────────────────────────────────
      > water            7.00 µL  14.00 µL
      > buffer     10x   1.00 µL   2.00 µL
      > enzyme      5x   2.00 µL
      > ──────────────────────────────────
      >                 10.00 µL   8.00 µL/rxn
  -
    id: show_concs=True
    master_mix:
      > mm = MasterMix.from_text("""\
      > Reagent  Stock    Volume  MM?
      > =======  =====  ========  ===
      > water           to 10 µL  yes
      > buffer     10x      1 µL  yes
      > enzyme      5x      2 µL   no
      > """)
      >
      > mm.show_concs = True

    expected:
      > Reagent  Stock  Final    Volume
      > ───────────────────────────────
      > water                   7.00 µL
      > buffer     10x     1x   1.00 µL
      > enzyme      5x     1x   2.00 µL
      > ───────────────────────────────
      >                        10.00 µL
  -
    id: show_master_mix=False
    master_mix:
      > mm = MasterMix.from_text("""\
      > Reagent  Stock    Volume  MM?
      > =======  =====  ========  ===
      > water           to 10 µL  yes
      > buffer     10x      1 µL  yes
      > enzyme      5x      2 µL   no
      > """)
      >
      > mm.num_reactions = 2
      > mm.extra_fraction = 0
      > mm.extra_reactions = 0
      > mm.show_master_mix = False

    expected:
      > Reagent  Stock    Volume
      > ────────────────────────
      > water            7.00 µL
      > buffer     10x   1.00 µL
      > enzyme      5x   2.00 µL
      > ────────────────────────
      >                 10.00 µL
  -
    id: show_1x=False
    master_mix:
      > mm = MasterMix.from_text("""\
      > Reagent  Stock    Volume  MM?
      > =======  =====  ========  ===
      > water           to 10 µL  yes
      > buffer     10x      1 µL  yes
      > enzyme      5x      2 µL   no
      > """)
      >
      > mm.num_reactions = 2
      > mm.extra_fraction = 0
      > mm.extra_reactions = 0
      > mm.show_1x = False

    expected:
      > Reagent  Stock        2x
      > ────────────────────────
      > water           14.00 µL
      > buffer     10x   2.00 µL
      > enzyme      5x
      > ────────────────────────
      >                  8.00 µL/rxn
  -
    id: show_totals=False
    master_mix:
      > mm = MasterMix.from_text("""\
      > Reagent  Stock    Volume  MM?
      > =======  =====  ========  ===
      > water           to 10 µL  yes
      > buffer     10x      1 µL  yes
      > enzyme      5x      2 µL   no
      > """)
      >
      > mm.num_reactions = 2
      > mm.extra_fraction = 0
      > mm.extra_reactions = 0
      > mm.show_totals = False

    expected:
      > Reagent  Stock   Volume        2x
      > ─────────────────────────────────
      > water           7.00 µL  14.00 µL
      > buffer     10x  1.00 µL   2.00 µL
      > enzyme      5x  2.00 µL
  -
    id: scale-header-integer-ending-with-0
    master_mix:
      > mm = MasterMix.from_text("""\
      > Reagent  Stock    Volume  MM?
      > =======  =====  ========  ===
      > water           to 10 µL  yes
      > buffer     10x      1 µL  yes
      > enzyme      5x      2 µL   no
      > """)
      >
      > mm.num_reactions = 10
      > mm.extra_percent = 0

    expected:
      > Reagent  Stock    Volume       10x
      > ──────────────────────────────────
      > water            7.00 µL  70.00 µL
      > buffer     10x   1.00 µL  10.00 µL
      > enzyme      5x   2.00 µL
      > ──────────────────────────────────
      >                 10.00 µL   8.00 µL/rxn
  -
    id: scale-header-integer-not-ending-with-0
    master_mix:
      > mm = MasterMix.from_text("""\
      > Reagent  Stock    Volume  MM?
      > =======  =====  ========  ===
      > water           to 10 µL  yes
      > buffer     10x      1 µL  yes
      > enzyme      5x      2 µL   no
      > """)
      >
      > mm.num_reactions = 10
      > mm.extra_percent = 10

    expected:
      > Reagent  Stock    Volume       11x
      > ──────────────────────────────────
      > water            7.00 µL  77.00 µL
      > buffer     10x   1.00 µL  11.00 µL
      > enzyme      5x   2.00 µL
      > ──────────────────────────────────
      >                 10.00 µL   8.00 µL/rxn
  -
    id: scale-header-one-decimal-point
    master_mix:
      > mm = MasterMix.from_text("""\
      > Reagent  Stock    Volume  MM?
      > =======  =====  ========  ===
      > water           to 10 µL  yes
      > buffer     10x      1 µL  yes
      > enzyme      5x      2 µL   no
      > """)
      >
      > mm.num_reactions = 10
      > mm.extra_percent = 11

    expected:
      > Reagent  Stock    Volume     11.1x
      > ──────────────────────────────────
      > water            7.00 µL  77.70 µL
      > buffer     10x   1.00 µL  11.10 µL
      > enzyme      5x   2.00 µL
      > ──────────────────────────────────
      >                 10.00 µL   8.00 µL/rxn
  -
    id: scale-header-two-decimal-points
    master_mix:
      > mm = MasterMix.from_text("""\
      > Reagent  Stock    Volume  MM?
      > =======  =====  ========  ===
      > water           to 10 µL  yes
      > buffer     10x      1 µL  yes
      > enzyme      5x      2 µL   no
      > """)
      >
      > mm.num_reactions = 10
      > mm.extra_percent = 11.1

    expected:
      > Reagent  Stock    Volume    ≈11.1x
      > ──────────────────────────────────
      > water            7.00 µL  77.77 µL
      > buffer     10x   1.00 µL  11.11 µL
      > enzyme      5x   2.00 µL
      > ──────────────────────────────────
      >                 10.00 µL   8.00 µL/rxn
  -
    id: drop-solvent
    master_mix:
      > mm = MasterMix.from_text("""\
      > Reagent   Stock   Volume  MM?
      > ========  =====  =======  ===
      > water            to 3 µL  yes
      > buffer       3x     1 µL  yes
      > cofactor     3x     1 µL  yes
      > enzyme       3x     1 µL   no
      > """)
      >
      > mm.num_reactions = 2
      > mm.extra_fraction = 0
      > mm.extra_reactions = 0

    expected:
      > Reagent   Stock   Volume       2x
      > ─────────────────────────────────
      > buffer       3x  1.00 µL  2.00 µL
      > cofactor     3x  1.00 µL  2.00 µL
      > enzyme       3x  1.00 µL
      > ─────────────────────────────────
      >                  3.00 µL  2.00 µL/rxn
  -
    id: drop-reagent-volume=0.001
    master_mix:
      > mm = MasterMix.from_text("""\
      > Reagent   Stock   Volume  MM?
      > ========  =====  =======  ===
      > water            to 3 µL  yes
      > buffer       3x     1 µL  yes
      > cofactor     3x     1 µL  yes
      > enzyme       3x     1 µL   no
      > """)
      >
      > mm.num_reactions = 2
      > mm.extra_fraction = 0
      > mm.extra_reactions = 0
      > mm['buffer'].volume = 0.001, 'µL'

    expected:
      > Reagent   Stock   Volume       2x
      > ─────────────────────────────────
      > water            1.00 µL  2.00 µL
      > cofactor     3x  1.00 µL  2.00 µL
      > enzyme       3x  1.00 µL
      > ─────────────────────────────────
      >                  3.00 µL  2.00 µL/rxn
  -
    id: drop-reagent-volume=-0.001
    master_mix:
      > mm = MasterMix.from_text("""\
      > Reagent   Stock   Volume  MM?
      > ========  =====  =======  ===
      > water            to 3 µL  yes
      > buffer       3x     1 µL  yes
      > cofactor     3x     1 µL  yes
      > enzyme       3x     1 µL   no
      > """)
      >
      > mm.num_reactions = 2
      > mm.extra_fraction = 0
      > mm.extra_reactions = 0
      > mm['buffer'].volume = -0.001, 'µL'

    expected:
      > Reagent   Stock   Volume       2x
      > ─────────────────────────────────
      > water            1.00 µL  2.00 µL
      > cofactor     3x  1.00 µL  2.00 µL
      > enzyme       3x  1.00 µL
      > ─────────────────────────────────
      >                  3.00 µL  2.00 µL/rxn

  -
    id: no-solvent
    master_mix:
      > mm = MasterMix.from_text("""\
      > Reagent   Stock   Volume  MM?
      > ========  =====  =======  ===
      > buffer       3x     1 µL  yes
      > cofactor     3x     1 µL  yes
      > enzyme       3x     1 µL   no
      > """)
      >
      > mm.num_reactions = 1
    expected:
      > Reagent   Stock   Volume
      > ────────────────────────
      > buffer       3x  1.00 µL
      > cofactor     3x  1.00 µL
      > enzyme       3x  1.00 µL
      > ────────────────────────
      >                  3.00 µL

  -
    id: no-solvent-num-reactions=1
    master_mix:
      > mm = MasterMix.from_text("""\
      > Reagent   Stock   Volume  MM?
      > ========  =====  =======  ===
      > buffer       3x     1 µL  yes
      > cofactor     3x     1 µL  yes
      > enzyme       3x     1 µL   no
      > """)
      >
      > mm.num_reactions = 1
    expected:
      > Reagent   Stock   Volume
      > ────────────────────────
      > buffer       3x  1.00 µL
      > cofactor     3x  1.00 µL
      > enzyme       3x  1.00 µL
      > ────────────────────────
      >                  3.00 µL
  -
    id: no-solvent-num-reactions=2
    master_mix:
      > mm = MasterMix.from_text("""\
      > Reagent   Stock   Volume  MM?
      > ========  =====  =======  ===
      > buffer       3x     1 µL  yes
      > cofactor     3x     1 µL  yes
      > enzyme       3x     1 µL   no
      > """)
      >
      > mm.num_reactions = 2
      > mm.extra_fraction = 0
      > mm.extra_reactions = 0
    expected:
      > Reagent   Stock   Volume       2x
      > ─────────────────────────────────
      > buffer       3x  1.00 µL  2.00 µL
      > cofactor     3x  1.00 µL  2.00 µL
      > enzyme       3x  1.00 µL
      > ─────────────────────────────────
      >                  3.00 µL  2.00 µL/rxn


